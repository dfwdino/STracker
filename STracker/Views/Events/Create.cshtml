@model STracker.Models.CreateEvent
@using System.Globalization;


@{


    STrackerEntities db = new STrackerEntities();
    int NumberOfEntries = 0;
    int NumberOfPositions = 0;
    int NumberOfLocations = 0;
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false)
        <div class="container">

            <div class="row" style="margin-left:10px !important">
                <div class="col">@Html.Label("Date:") @Html.EditorFor(m => m.Date) <a onclick="GetCurrentDateTime()">Get Date</a> </div>
            </div>
            <br />

            <div style="margin-left:10px">
                <div class="row">
                    <div class="col-md-2" style="padding-bottom:5px;">
                        @Html.Label("Over Rating:")
                        @Html.DropDownListFor(m => m.OverAllRating, Enumerable.Range(0, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))
                    </div>
                    <div class="col-md-3" style="padding-bottom:5px;">
                        @Html.Label("Number of Orgasms:")
                        @Html.DropDownListFor(m => m.OrgamNumber, Enumerable.Range(0, 10).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }))
                    </div>
                </div>
            </div>

            <br />

            <div class="actsposition">
                <div name="form" id="form">

                </div>
                <div class="row">
                    <div class="col-sm-1" style="margin-left:10px;margin-bottom:5px;">
                        <input type="button" class="btn btn-default" id="addnewentry" name="addnewentry" value="New Action" />
                    </div>

                </div>

            </div>


            <br />

            <div class="actsposition">
                <div name="formpositions" id="formpositions">

                </div>

                <div class="row">
                    <div class="col-sm-1" style="margin-left:10px;margin-bottom:5px;">
                        <input type="button" class="btn btn-default" id="addnewposition" name="addnewposition" value="New Position" />
                    </div>

                </div>
            </div>
            <br />

            <div class="actsposition">
                <div name="formlocation" id="formlocation">

                </div>

                <div class="row">
                    <div class="col-sm-1" style="margin-left:10px;margin-bottom:5px;">
                        <input type="button" class="btn btn-default" id="addnewlocation" name="addnewlocation" value="New Location" />
                    </div>

                </div>
            </div>


            <div style="margin-left:25px">
                <div class="row"><div class="col">@Html.LabelFor(m => m.Notes):</div> </div>

                <div class="row"><div class="col">@Html.TextAreaFor(m => m.Notes, 10, 45, null)</div></div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-12">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div name="formoutline" id="formoutline" style="display:none">
        <div name="entryform" id="entryform" class="acts">
            <br />
            <div class="row">
                <div class="col" style="margin-left:15px">@Html.DropDownListFor(x => Model.EventDetails[@NumberOfEntries].WhoDid, new SelectList(ViewBag.People, "ID", "Name"), new { required = "required" }) did these things</div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-12">
                    @foreach (var item in ViewBag.EventAction)
                    {
                        <label for="Acts[@item.ID][@NumberOfEntries]">
                            <input style="margin-left:5px" type="checkbox" name="EventDetails[@NumberOfEntries].SelectedAction"
                                   id="Acts[@item.ID][@NumberOfEntries]" value="@item.ID" />
                            @item.Name
                        </label>
                    }
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">to @Html.DropDownListFor(x => Model.EventDetails[@NumberOfEntries].ToWho, new SelectList(ViewBag.People, "ID", "Name"))</div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-2 deleteme" id="remove">remove entry</div>
            </div>

        </div>
    </div>

    <div name="sexoutline" id="sexoutline" style="display:none;">
        <div name="sexpositions" id="sexpositions" class="sexp">
            <br />
            <div class="row">
                <div class="col" style="margin-left:15px">
                    @Html.DropDownListFor(x => Model.Fucks[@NumberOfPositions].TopPerson, new SelectList(ViewBag.People, "ID", "Name"), new { required = "required" }) put
                    @Html.DropDownListFor(x => Model.Fucks[@NumberOfPositions].BottomPerson, new SelectList(ViewBag.People, "ID", "Name"), new { required = "required" }) in these positions
                    and condom was used @Html.CheckBoxFor(x => Model.Fucks[@NumberOfPositions].CondomUsed)
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-12">
                    @foreach (var item in ViewBag.Positions)
                    {
                        TextInfo textInfo = new CultureInfo("en-US", false).TextInfo;


                        <label for="Positions[@item.ID][@NumberOfPositions]">
                            <input style="margin-left:5px" type="checkbox" name="Fucks[@NumberOfPositions].SelectedPosition"
                                   id="Positions[@item.ID][@NumberOfPositions]" value="@item.ID" />
                            @CultureInfo.CurrentCulture.TextInfo.ToTitleCase(@item.Type)
                        </label>
                    }
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-2 Fdeleteme" id="remove">remove positions</div>
            </div>
            <br />
        </div>
    </div>

    <div name="locationline" id="locationline" style="display:none;">
        <div name="eventlocations" id="eventlocations" class="elocation">
            <br />
            <div class="row">
                <div class="col-lg-12">
                    @foreach (var item in ViewBag.Locations)
                    {
                        <label for="Locations[@item.ID][@NumberOfLocations]">
                            <input style="margin-left:5px" type="checkbox" name="Locations[@NumberOfLocations].SelectedLocations"
                                   id="Locations[@item.ID][@NumberOfLocations]" value="@item.ID" />
                            @item.Name
                        </label>
                    }
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-lg-2 Ldeleteme" id="remove">remove location</div>
            </div>
            <br />
        </div>
    </div>

</body>
</html>

<script>
    var NumberOfEntries = 0;
    var NumberOfPositions = 0;
    var NumberOfLocations = 0;

    function GetCurrentDateTime() {
        
        var value = document.getElementById('Date').value = new Date().toLocaleDateString();
    }

    $("#addnewentry").click(function () {
        addActions();
    });

    $("#addnewposition").click(function () {
        addPosition();
    });

    $("#addnewlocation").click(function () {
        addLocation();
    });

    $(function () {
        addActions();
        addLocation()
    });

    $('form').on('click', '.deleteme', function () {
        document.getElementById('form').removeChild(document.getElementById("entryform_" + this.id.split('_')[1]));
    });

    $('form').on('click', '.Fdeleteme', function () {
        document.getElementById('formpositions').removeChild(document.getElementById("sexpositions_" + this.id.split('_')[1]));
    });

    $('form').on('click', '.Ldeleteme', function () {
        document.getElementById('formlocation').removeChild(document.getElementById("eventlocations_" + this.id.split('_')[1]));

    });


    function addActions() {

        var formoutline = "";
        if (NumberOfEntries > 0) {
            formoutline = "<hr>"
        }
        formoutline += $('#formoutline').html();
        formoutline = formoutline.replace(/\[0]/g, "[" + NumberOfEntries + "]")
            .replace(/\entryform/g, "entryform_" + NumberOfEntries)
            .replace("remove", "remove_" + NumberOfEntries)

        $(formoutline).appendTo("#form");

        NumberOfEntries++;

    }

    function addPosition() {

        var sexoutline = "";
        if (NumberOfPositions > 0) {
            sexoutline = "<hr>"
        }
        sexoutline += $('#sexoutline').html();
        sexoutline = sexoutline.replace(/\[0]/g, "[" + NumberOfPositions + "]")
            .replace(/\"sexpositions"/g, "sexpositions_" + NumberOfPositions)
            .replace("remove", "remove_" + NumberOfPositions);

        $("<hr>").appendTo(sexoutline);
        $(sexoutline).appendTo("#formpositions");

        NumberOfPositions++;

    }

    function addLocation() {

        var locationline = "";
        if (NumberOfLocations > 0) {
            locationline = "<hr>"
        }
        locationline += $('#locationline').html();
        locationline = locationline.replace(/\[0]/g, "[" + NumberOfLocations + "]")
            .replace(/\"eventlocations"/g, "eventlocations_" + NumberOfLocations)
            .replace("remove", "remove_" + NumberOfLocations);

        $("<hr>").appendTo(locationline);
        $(locationline).appendTo("#formlocation");

        NumberOfLocations++;

    }

</script>

<style>
    .container {
        padding-top: 10px;
        margin-left: 0px !important;
    }

    .actsposition {
        /*border-style: solid;
        border-color: #000000;*/
    }

    .acts {
        border-style: solid;
        border-color: #0094ff;
        margin: 10px 10px 10px 10px;
        padding-left: 10px;
    }

    .sexp {
        border-style: solid;
        border-color: red;
        margin: 10px 10px 10px 10px;
        padding-left: 10px;
        margin-bottom: 10px;
    }

    .elocation {
        border-style: solid;
        border-color: brown;
        margin: 10px 10px 10px 10px;
        padding-left: 10px;
        margin-bottom: 10px;
    }

    .areasoutline {
        border-style: solid;
        border-color: black;
        margin: 10px 10px 10px 10px;
        padding-left: 10px;
        margin-bottom: 10px;
    }

    .Fdeleteme, .deleteme, .Ldeleteme {
        text-transform: uppercase;
        color: red;
    }

    #Notes {
        column-width: 50;
    }
    /*[type=checkbox]:after {
        content: attr(value);
        margin: -3px 15px;
        vertical-align: top;
        white-space: nowrap;
        display: inline-block;*/
</style>